@inherits LayoutComponentBase
@inject AppState AppState;

<nav class="navbar navbar-light bg-primary">
    <a class="navbar-brand text-light">Concise Help Desk</a>
</nav>

<nav class="navbar navbar-light bg-primary">
    <nav class="nav mr-auto">
        <a class="nav-item nav-link active" data-toggle="tab" href="#tickets">Tickets</a>
        <a class="nav-item nav-link" data-toggle="tab" href="#kbase">Knowlege base</a>
        <a class="nav-item nav-link" data-toggle="tab" href="#reports">Reports</a>
    </nav>

    <form class="form-inline">
        <input class="form-control form-control-sm" type="search" @bind="AppState.SearchText" placeholder="Search">
    </form>
</nav>

<div class="container-fluid h-100">
    <div class="row h-100">
        <div class="sidebar bg-secondary d-none d-md-block">
            <nav class="nav flex-column" id="nav-menu">
                <a class="@CssClass(TicketViewMode.Open)"  href="javascript: void(0)" @onclick="@(e => AppState.ViewMode=TicketViewMode.Open)">
                    <i class="fas fa-envelope mr-2"></i>Open <span class="badge badge-pill badge-info ml-1">@GetViewCount(TicketViewMode.Open)</span>
                </a>
                <a class="@CssClass(TicketViewMode.Closed)"  href="javascript: void(0)" @onclick="@(e => AppState.ViewMode=TicketViewMode.Closed)">
                    <i class="fas fa-folder mr-2"></i>Closed <span class="badge badge-pill badge-info ml-1">@GetViewCount(TicketViewMode.Closed)</span>
                </a>
                <a class="@CssClass(TicketViewMode.All)"  href="javascript: void(0)" @onclick="@(e => AppState.ViewMode=TicketViewMode.All)">
                    <i class="fas fa-newspaper mr-2"></i>All <span class="badge badge-pill badge-info ml-1">@GetViewCount(TicketViewMode.All)</span>
                </a>
                <hr class="bg-light" /> 
                <a class="@CssClass(TicketViewMode.Archived)"  href="#archived" @onclick="@(e => AppState.ViewMode=TicketViewMode.Archived)">
                    <i class="fas fa-archive mr-2"></i>Archived
                </a>
            </nav>
        </div>

        @Body
    </div>
</div>

@code {

    int GetViewCount(TicketViewMode view)
    {
        switch (view)
        {
            case TicketViewMode.Open:
                return AppState.Requests.Where(r => r.IsResolved == false).Count();
                
            case TicketViewMode.Closed:
                 return AppState.Requests.Where(r => r.IsResolved == true).Count();
      
            default:
                return AppState.Requests.Count;
               
        }
    }

    string CssClass(TicketViewMode view)
    {
        var cssClass = new List<string>();

        cssClass.Add("nav-item");
        cssClass.Add("nav-link");

        if (AppState.ViewMode == view)
            cssClass.Add("active");

        return string.Join(' ', cssClass);
    }
}



